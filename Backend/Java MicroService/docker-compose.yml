version: '3.8'

services:
  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: GaitTST
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./app_users.csv:/docker-entrypoint-initdb.d/app_users.csv

  app:
    build:
      context: .
      dockerfile: Dockerfile   # Dockerfile for your Spring Boot app
    container_name: intellij_app
    restart: always
    depends_on:
      - db
      - blazegraph
      - nlp-service
    env_file:
      - .env  # Load environment variables from .env file
    environment:
      SPRING_APPLICATION_NAME: Gait
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/GaitTST
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      spring.liquibase.change-log: classpath:db/changelog/db.changelog-master.xml
      jwt.secret: ${JWT_SECRET}  # Use a secure secret from .env
      jwt.expiration-ms: 86400000
      BLAZEGRAPH_ENDPOINT: http://blazegraph:9999/blazegraph/namespace/kb/sparql
      NLP_ENDPOINT: http://nlp-service:5000/parse/with-api-detection
      GITHUB_TOKEN: ${GITHUB_TOKEN}  # Pass GitHub Token from .env
    ports:
      - "8080:8080"

  blazegraph:
    build:
      context: ./blazegraph   # Folder containing your Blazegraph Dockerfile and jar
      dockerfile: Dockerfile
    container_name: blazegraph
    restart: always
    ports:
      - "9999:9999"
    volumes:
      - blazegraph_data:/var/lib/blazegraph/data

  nlp-service:
    build:
      context: ../Python MicroService   # Fixed directory name (avoid spaces!)
      dockerfile: Dockerfile
    container_name: nlp-service
    restart: always
    env_file:
      - .env  # Load environment variables from .env file
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}  # Securely load OpenAI key
    ports:
      - "5000:5000"

  frontend:
    build:
      context: ../../Frontend
      dockerfile: DOCKERFILE
    container_name: gait-frontend
    restart: always
    environment:
      VITE_API_PROTOCOL: "http"
      VITE_API_HOSTNAME: "app"
      VITE_API_PORT: "8080"
    ports:
      - "3000:80"

volumes:
  pgdata:
  blazegraph_data:
